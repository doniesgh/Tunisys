{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { useNavigate } from 'react-router-dom'; // Add this import\n\nexport const useLogin = () => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const navigate = useNavigate(); // Initialize the navigate function\n\n  const {\n    dispatch\n  } = useAuthContext();\n\n  const login = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('/api/user/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n\n    if (response.ok) {\n      // save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json)); // update the auth context\n\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n\n      switch (json.role) {\n        case 'COORDINATRICE':\n          navigate('/admin/default');\n          break;\n\n        case 'TECHNICIEN':\n          navigate('/tech/default');\n          break;\n\n        case 'HELPDESK':\n          navigate('/helpdesk/default');\n          break;\n\n        case 'CLIENT':\n          navigate('/client/default');\n          break;\n\n        case 'ADMIN':\n          navigate('/manager/default');\n          break;\n\n        default:\n          navigate('/noacces');\n          break;\n      }\n\n      setIsLoading(false);\n    }\n  };\n\n  return {\n    login,\n    isLoading,\n    error\n  };\n};\n\n_s(useLogin, \"hXwXqDP2OQIi9Gjzy8+wmmDe9qA=\", false, function () {\n  return [useNavigate, useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useNavigate","useLogin","error","setError","isLoading","setIsLoading","navigate","dispatch","login","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload","role"],"sources":["C:/Users/donia/Documents/Tunisys/src/views/auth/hooks/useLogin.jsx"],"sourcesContent":["import { useState } from 'react'\nimport { useAuthContext } from '../hooks/useAuthContext'\nimport { useNavigate } from 'react-router-dom'; // Add this import\n\nexport const useLogin = () => {\n  const [error, setError] = useState(null)\n  const [isLoading, setIsLoading] = useState(null)\n  const navigate = useNavigate(); // Initialize the navigate function\n\n  \n  const { dispatch } = useAuthContext()\n\n  const login = async (email, password) => {\n    setIsLoading(true)\n    setError(null)\n\n    const response = await fetch('/api/user/login', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({ email, password })\n    })\n    const json = await response.json()\n\n    if (!response.ok) {\n      setIsLoading(false)\n      setError(json.error)\n    }\n    if (response.ok) {\n      // save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json))\n\n      // update the auth context\n      dispatch({type: 'LOGIN', payload: json})\n      switch (json.role) {\n        case 'COORDINATRICE':\n          navigate('/admin/default');\n          break;\n        case 'TECHNICIEN':\n          navigate('/tech/default');\n          break;\n        case 'HELPDESK':\n          navigate('/helpdesk/default');\n          break;\n        case 'CLIENT':\n          navigate('/client/default');\n          break;\n        case 'ADMIN':\n          navigate('/manager/default');\n          break;\n        default:\n          navigate('/noacces');\n          break;\n      }\n      setIsLoading(false)\n    }\n  }\n\n  return { login, isLoading, error }\n}"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CAAgD;;AAEhD,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAC5B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAMQ,QAAQ,GAAGN,WAAW,EAA5B,CAH4B,CAGI;;EAGhC,MAAM;IAAEO;EAAF,IAAeR,cAAc,EAAnC;;EAEA,MAAMS,KAAK,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;IACvCL,YAAY,CAAC,IAAD,CAAZ;IACAF,QAAQ,CAAC,IAAD,CAAR;IAEA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAD,EAAoB;MAC9CC,MAAM,EAAE,MADsC;MAE9CC,OAAO,EAAE;QAAC,gBAAgB;MAAjB,CAFqC;MAG9CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAAER,KAAF;QAASC;MAAT,CAAf;IAHwC,CAApB,CAA5B;IAKA,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAT,EAAnB;;IAEA,IAAI,CAACP,QAAQ,CAACQ,EAAd,EAAkB;MAChBd,YAAY,CAAC,KAAD,CAAZ;MACAF,QAAQ,CAACe,IAAI,CAAChB,KAAN,CAAR;IACD;;IACD,IAAIS,QAAQ,CAACQ,EAAb,EAAiB;MACf;MACAC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BL,IAAI,CAACC,SAAL,CAAeC,IAAf,CAA7B,EAFe,CAIf;;MACAX,QAAQ,CAAC;QAACe,IAAI,EAAE,OAAP;QAAgBC,OAAO,EAAEL;MAAzB,CAAD,CAAR;;MACA,QAAQA,IAAI,CAACM,IAAb;QACE,KAAK,eAAL;UACElB,QAAQ,CAAC,gBAAD,CAAR;UACA;;QACF,KAAK,YAAL;UACEA,QAAQ,CAAC,eAAD,CAAR;UACA;;QACF,KAAK,UAAL;UACEA,QAAQ,CAAC,mBAAD,CAAR;UACA;;QACF,KAAK,QAAL;UACEA,QAAQ,CAAC,iBAAD,CAAR;UACA;;QACF,KAAK,OAAL;UACEA,QAAQ,CAAC,kBAAD,CAAR;UACA;;QACF;UACEA,QAAQ,CAAC,UAAD,CAAR;UACA;MAlBJ;;MAoBAD,YAAY,CAAC,KAAD,CAAZ;IACD;EACF,CA3CD;;EA6CA,OAAO;IAAEG,KAAF;IAASJ,SAAT;IAAoBF;EAApB,CAAP;AACD,CAtDM;;GAAMD,Q;UAGMD,W,EAGID,c"},"metadata":{},"sourceType":"module"}