{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\donia\\\\Documents\\\\Tunisys\\\\src\\\\Contexts\\\\reclamationContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ReclamationsContext = /*#__PURE__*/createContext();\nexport const reclamationsReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_REC\":\n      return {\n        reclamations: action.payload\n      };\n\n    case \"SET_FIN_REC\":\n      return {\n        reclamations: action.payload\n      };\n\n    case \"SET_REP_REC\":\n      return {\n        reclamations: action.payload\n      };\n\n    case \"CREATE_REC\":\n      return {\n        reclamations: [action.payload, ...state.reclamations]\n      };\n\n    case \"UPDATE_REC_AFFECTER\":\n      const updatedReclamationsAffecter = state.reclamations.map(reclamation => {\n        if (reclamation._id === action.payload._id) {\n          return { ...reclamation,\n            etat: \"en cours\"\n          };\n        } else {\n          return reclamation;\n        }\n      });\n      return { ...state,\n        helpreclamations: updatedReclamationsAffecter\n      };\n\n    case \"UPDATE_REC\":\n      const updatedReclamations = state.reclamations.map(reclamation => {\n        if (reclamation._id === action.payload._id) {\n          return action.payload;\n        } else {\n          return reclamation;\n        }\n      });\n      return {\n        reclamations: updatedReclamations\n      };\n\n    case \"DELETE_REC\":\n      return {\n        reclamations: state.reclamations.filter(r => r._id !== action.payload._id)\n      };\n\n    default:\n      return state;\n  }\n};\nexport const ReclamationsContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reclamationsReducer, {\n    reclamations: null\n  });\n  return /*#__PURE__*/_jsxDEV(ReclamationsContext.Provider, {\n    value: { ...state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReclamationsContextProvider, \"b6gWkLcKOe9goiEcDKp6yY7PkUI=\");\n\n_c = ReclamationsContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReclamationsContextProvider\");","map":{"version":3,"names":["createContext","useReducer","ReclamationsContext","reclamationsReducer","state","action","type","reclamations","payload","updatedReclamationsAffecter","map","reclamation","_id","etat","helpreclamations","updatedReclamations","filter","r","ReclamationsContextProvider","children","dispatch"],"sources":["C:/Users/donia/Documents/Tunisys/src/Contexts/reclamationContext.js"],"sourcesContent":["import { createContext, useReducer } from \"react\";\n\nexport const ReclamationsContext = createContext();\n\nexport const reclamationsReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_REC\":\n      return {\n        reclamations: action.payload,\n      };\n    case \"SET_FIN_REC\":\n      return {\n        reclamations: action.payload,\n      };\n    case \"SET_REP_REC\":\n      return {\n        reclamations: action.payload,\n      };\n    case \"CREATE_REC\":\n      return {\n        reclamations: [action.payload, ...state.reclamations],\n      };\n      case \"UPDATE_REC_AFFECTER\":\n        const updatedReclamationsAffecter = state.reclamations.map(\n          (reclamation) => {\n            if (reclamation._id === action.payload._id) {\n              return { ...reclamation, etat: \"en cours\" };\n            } else {\n              return reclamation;\n            }\n          }\n        );\n        return {\n          ...state,\n          helpreclamations: updatedReclamationsAffecter,\n        };\n      \n    case \"UPDATE_REC\":\n      const updatedReclamations = state.reclamations.map((reclamation) => {\n        if (reclamation._id === action.payload._id) {\n          return action.payload;\n        } else {\n          return reclamation;\n        }\n      });\n      return {\n        reclamations: updatedReclamations,\n      };\n    case \"DELETE_REC\":\n      return {\n        reclamations: state.reclamations.filter(\n          (r) => r._id !== action.payload._id\n        ),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const ReclamationsContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reclamationsReducer, {\n    reclamations: null,\n  });\n\n  return (\n    <ReclamationsContext.Provider value={{ ...state, dispatch }}>\n      {children}\n    </ReclamationsContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;;AAEA,OAAO,MAAMC,mBAAmB,gBAAGF,aAAa,EAAzC;AAEP,OAAO,MAAMG,mBAAmB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACpD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,SAAL;MACE,OAAO;QACLC,YAAY,EAAEF,MAAM,CAACG;MADhB,CAAP;;IAGF,KAAK,aAAL;MACE,OAAO;QACLD,YAAY,EAAEF,MAAM,CAACG;MADhB,CAAP;;IAGF,KAAK,aAAL;MACE,OAAO;QACLD,YAAY,EAAEF,MAAM,CAACG;MADhB,CAAP;;IAGF,KAAK,YAAL;MACE,OAAO;QACLD,YAAY,EAAE,CAACF,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAAK,CAACG,YAA1B;MADT,CAAP;;IAGA,KAAK,qBAAL;MACE,MAAME,2BAA2B,GAAGL,KAAK,CAACG,YAAN,CAAmBG,GAAnB,CACjCC,WAAD,IAAiB;QACf,IAAIA,WAAW,CAACC,GAAZ,KAAoBP,MAAM,CAACG,OAAP,CAAeI,GAAvC,EAA4C;UAC1C,OAAO,EAAE,GAAGD,WAAL;YAAkBE,IAAI,EAAE;UAAxB,CAAP;QACD,CAFD,MAEO;UACL,OAAOF,WAAP;QACD;MACF,CAPiC,CAApC;MASA,OAAO,EACL,GAAGP,KADE;QAELU,gBAAgB,EAAEL;MAFb,CAAP;;IAKJ,KAAK,YAAL;MACE,MAAMM,mBAAmB,GAAGX,KAAK,CAACG,YAAN,CAAmBG,GAAnB,CAAwBC,WAAD,IAAiB;QAClE,IAAIA,WAAW,CAACC,GAAZ,KAAoBP,MAAM,CAACG,OAAP,CAAeI,GAAvC,EAA4C;UAC1C,OAAOP,MAAM,CAACG,OAAd;QACD,CAFD,MAEO;UACL,OAAOG,WAAP;QACD;MACF,CAN2B,CAA5B;MAOA,OAAO;QACLJ,YAAY,EAAEQ;MADT,CAAP;;IAGF,KAAK,YAAL;MACE,OAAO;QACLR,YAAY,EAAEH,KAAK,CAACG,YAAN,CAAmBS,MAAnB,CACXC,CAAD,IAAOA,CAAC,CAACL,GAAF,KAAUP,MAAM,CAACG,OAAP,CAAeI,GADpB;MADT,CAAP;;IAMF;MACE,OAAOR,KAAP;EAnDJ;AAqDD,CAtDM;AAwDP,OAAO,MAAMc,2BAA2B,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC3D,MAAM,CAACf,KAAD,EAAQgB,QAAR,IAAoBnB,UAAU,CAACE,mBAAD,EAAsB;IACxDI,YAAY,EAAE;EAD0C,CAAtB,CAApC;EAIA,oBACE,QAAC,mBAAD,CAAqB,QAArB;IAA8B,KAAK,EAAE,EAAE,GAAGH,KAAL;MAAYgB;IAAZ,CAArC;IAAA,UACGD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAVM;;GAAMD,2B;;KAAAA,2B"},"metadata":{},"sourceType":"module"}