{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\donia\\\\Documents\\\\Tunisys\\\\src\\\\views\\\\admin\\\\ClientManagement\\\\CONTRAT\\\\ModifierAttachement.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AttachmentsModal = _ref => {\n  _s();\n\n  let {\n    isOpen,\n    handleClose,\n    existingAttachments,\n    onDeleteAttachment,\n    onAddAttachments,\n    onSaveAttachments\n  } = _ref;\n  const [newAttachments, setNewAttachments] = useState([]);\n  const [existingPaths, setExistingPaths] = useState([]);\n  const {\n    contratId\n  } = useParams();\n  useEffect(() => {\n    const paths = existingAttachments.map(existingAttachment => existingAttachment.url);\n    setExistingPaths(paths);\n  }, [existingAttachments]);\n\n  const handleDeleteNewAttachment = index => {\n    setNewAttachments(prevAttachments => prevAttachments.filter((_, i) => i !== index));\n  };\n\n  const handleDeleteExistingAttachment = attachmentId => {\n    onDeleteAttachment(attachmentId);\n  };\n\n  const handleAdd = () => {\n    // Delete existing attachments\n    existingAttachments.forEach(existingAttachment => {\n      handleDeleteExistingAttachment(existingAttachment._id);\n    }); // Add new attachments\n\n    onAddAttachments(newAttachments); // Save attachments\n\n    onSaveAttachments(); // Clear new attachments\n\n    setNewAttachments([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed top-0 left-0 z-10 flex h-full w-full items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg rounded-md bg-white p-8 border-2 shadow-lg border-tunisys-100 dark:bg-gray-900\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `modal ${isOpen ? 'open' : 'closed'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Attachments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-4 mt-4\",\n            children: existingAttachments && existingAttachments.map((existingAttachment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"absolute top-2 right-2 text-red-600\",\n                onClick: () => handleDeleteExistingAttachment(existingAttachment._id),\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: existingAttachment.url,\n                style: {\n                  width: '200px',\n                  height: '200px'\n                },\n                alt: `Existing Attachment ${index + 1}`,\n                className: \"rounded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-4 mt-4\",\n            children: newAttachments.map((newAttachment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"absolute top-2 right-2 text-red-600\",\n                onClick: () => handleDeleteNewAttachment(index),\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: URL.createObjectURL(newAttachment),\n                style: {\n                  width: '200px',\n                  height: '200px'\n                },\n                alt: `New Attachment ${index + 1}`,\n                className: \"rounded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => setNewAttachments(Array.from(e.target.files)),\n            multiple: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAdd,\n            className: `bg-green-500 rounded text-white p-2 ${newAttachments.length === 0 ? 'cursor-not-allowed opacity-50' : ''}`,\n            disabled: newAttachments.length === 0,\n            children: \"Save Attachments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClose,\n            className: \"ml-6 bg-red-500 rounded text-white p-2\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AttachmentsModal, \"fCqwd4/Xrx5i42BoIrbKR8ozhxw=\", false, function () {\n  return [useParams];\n});\n\n_c = AttachmentsModal;\nexport default AttachmentsModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttachmentsModal\");","map":{"version":3,"names":["React","useState","useParams","AttachmentsModal","isOpen","handleClose","existingAttachments","onDeleteAttachment","onAddAttachments","onSaveAttachments","newAttachments","setNewAttachments","existingPaths","setExistingPaths","contratId","useEffect","paths","map","existingAttachment","url","handleDeleteNewAttachment","index","prevAttachments","filter","_","i","handleDeleteExistingAttachment","attachmentId","handleAdd","forEach","_id","width","height","newAttachment","URL","createObjectURL","e","Array","from","target","files","length"],"sources":["C:/Users/donia/Documents/Tunisys/src/views/admin/ClientManagement/CONTRAT/ModifierAttachement.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst AttachmentsModal = ({\r\n    isOpen,\r\n    handleClose,\r\n    existingAttachments,\r\n    onDeleteAttachment,\r\n    onAddAttachments,\r\n    onSaveAttachments,\r\n}) => {\r\n    const [newAttachments, setNewAttachments] = useState([]);\r\n    const [existingPaths, setExistingPaths] = useState([]);\r\n    const { contratId } = useParams();\r\n  \r\n    useEffect(() => {\r\n      const paths = existingAttachments.map((existingAttachment) => existingAttachment.url);\r\n      setExistingPaths(paths);\r\n    }, [existingAttachments]);\r\n  \r\n    const handleDeleteNewAttachment = (index) => {\r\n      setNewAttachments((prevAttachments) => prevAttachments.filter((_, i) => i !== index));\r\n    };\r\n  \r\n    const handleDeleteExistingAttachment = (attachmentId) => {\r\n      onDeleteAttachment(attachmentId);\r\n    };\r\n  \r\n    const handleAdd = () => {\r\n      // Delete existing attachments\r\n      existingAttachments.forEach((existingAttachment) => {\r\n        handleDeleteExistingAttachment(existingAttachment._id);\r\n      });\r\n  \r\n      // Add new attachments\r\n      onAddAttachments(newAttachments);\r\n  \r\n      // Save attachments\r\n      onSaveAttachments();\r\n  \r\n      // Clear new attachments\r\n      setNewAttachments([]);\r\n    };\r\n  \r\n\r\n    return (\r\n        <div className=\"fixed top-0 left-0 z-10 flex h-full w-full items-center justify-center\">\r\n            <div className=\"relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg rounded-md bg-white p-8 border-2 shadow-lg border-tunisys-100 dark:bg-gray-900\">\r\n                <div className={`modal ${isOpen ? 'open' : 'closed'}`}>\r\n                    <div className=\"modal-content\">\r\n                        <h2>Attachments</h2>\r\n\r\n                        <div className=\"grid grid-cols-2 gap-4 mt-4\">\r\n                            {existingAttachments &&\r\n                                existingAttachments.map((existingAttachment, index) => (\r\n                                    <div key={index} className=\"relative\">\r\n                                        <button\r\n                                            className=\"absolute top-2 right-2 text-red-600\"\r\n                                            onClick={() => handleDeleteExistingAttachment(existingAttachment._id)}\r\n                                        >\r\n                                            X\r\n                                        </button>\r\n                                        <img\r\n                                            src={existingAttachment.url}\r\n                                            style={{ width: '200px', height: '200px' }}\r\n                                            alt={`Existing Attachment ${index + 1}`}\r\n                                            className='rounded'\r\n                                        />\r\n                                    </div>\r\n                                ))}\r\n                        </div>\r\n\r\n                        <div className=\"grid grid-cols-2 gap-4 mt-4\">\r\n                            {newAttachments.map((newAttachment, index) => (\r\n                                <div key={index} className=\"relative\">\r\n                                    <button\r\n                                        className=\"absolute top-2 right-2 text-red-600\"\r\n                                        onClick={() => handleDeleteNewAttachment(index)}\r\n                                    >\r\n                                        X\r\n                                    </button>\r\n                                    <img\r\n                                        src={URL.createObjectURL(newAttachment)}\r\n                                        style={{ width: '200px', height: '200px' }}\r\n                                        alt={`New Attachment ${index + 1}`}\r\n                                        className='rounded'\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        <input\r\n                            type=\"file\"\r\n                            onChange={(e) => setNewAttachments(Array.from(e.target.files))}\r\n                            multiple\r\n                        />\r\n\r\n                        <button\r\n                            onClick={handleAdd}\r\n                            className={`bg-green-500 rounded text-white p-2 ${newAttachments.length === 0 ? 'cursor-not-allowed opacity-50' : ''\r\n                                }`}\r\n                            disabled={newAttachments.length === 0}\r\n                        >\r\n                            Save Attachments\r\n                        </button>\r\n\r\n                        <button onClick={handleClose} className='ml-6 bg-red-500 rounded text-white p-2'>\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AttachmentsModal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}