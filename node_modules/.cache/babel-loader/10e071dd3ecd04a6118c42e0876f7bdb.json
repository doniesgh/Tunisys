{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\donia\\\\Documents\\\\Tunisys\\\\src\\\\views\\\\admin\\\\ClientManagement\\\\CONTRAT\\\\ModifierAttachement.jsx\",\n    _s = $RefreshSig$();\n\n/*import React, { useState, } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst AttachmentsModal = ({\r\n  isOpen,\r\n  handleClose,\r\n  existingAttachments,\r\n  onDeleteAttachment,\r\n  onAddAttachments}) =>\r\n   {\r\n  const [newAttachments, setNewAttachments] = useState([]);\r\n\r\n  const handleDeleteNewAttachment = (index) => {\r\n    setNewAttachments((prevAttachments) => prevAttachments.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleDeleteExistingAttachment = (attachmentId) => {\r\n    onDeleteAttachment(attachmentId);\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    onAddAttachments(newAttachments);\r\n    setNewAttachments([]);\r\n  };\r\n  const { contratId } = useParams();\r\n\r\n  return (\r\n    <div className=\"fixed top-0 left-0 z-10 flex h-full w-full items-center justify-center\">\r\n      <div className=\"relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg rounded-md bg-white p-8 border-2 shadow-lg border-tunisys-100 dark:bg-gray-900\">\r\n        <div className={`modal ${isOpen ? 'open' : 'closed'}`}>\r\n          <div className=\"modal-content\">\r\n            <h2>Attachments</h2>\r\n\r\n            <div className=\"grid grid-cols-2 gap-4 mt-4\">\r\n              {existingAttachments.map((existingAttachment, index) => (\r\n                <div key={index} className=\"relative\">\r\n                  <button\r\n                    className=\"absolute top-2 right-2 text-red-600\"\r\n                    onClick={() => handleDeleteExistingAttachment(existingAttachment._id)}\r\n                  >\r\n                    X\r\n                  </button>\r\n                  <img\r\n                    src={existingAttachment.url}\r\n                    style={{ width: '200px', height: '200px' }}\r\n                    alt={`Existing Attachment ${index + 1}`}\r\n                    className='rounded'\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-2 gap-4 mt-4\">\r\n              {newAttachments.map((newAttachment, index) => (\r\n                <div key={index} className=\"relative\">\r\n                  <button\r\n                    className=\"absolute top-2 right-2 text-red-600\"\r\n                    onClick={() => handleDeleteNewAttachment(index)}\r\n                  >\r\n                    X\r\n                  </button>\r\n                  <img\r\n                    src={URL.createObjectURL(newAttachment)}\r\n                    style={{ width: '200px', height: '200px' }}\r\n                    alt={`New Attachment ${index + 1}`}\r\n                    className='rounded'\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <input\r\n              type=\"file\"\r\n              onChange={(e) => setNewAttachments(Array.from(e.target.files))}\r\n              multiple\r\n            />\r\n\r\n            <button\r\n              onClick={handleAdd}\r\n              className={`bg-green-500 rounded text-white p-2 ${newAttachments.length === 0 ? 'cursor-not-allowed opacity-50' : ''}`}\r\n              disabled={newAttachments.length === 0}\r\n            >\r\n              Add Attachments\r\n            </button>\r\n\r\n            <button onClick={handleClose} className='ml-6 bg-red-500 rounded text-white p-2'>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttachmentsModal;*/\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModifierAttachement = () => {\n  _s();\n\n  const {\n    contratId\n  } = useParams();\n  const [attachments, setAttachments] = useState([]);\n  const [newAttachments, setNewAttachments] = useState([]); // Function to add new attachments to the list\n\n  const handleAddAttachments = files => {\n    setNewAttachments(files);\n  }; // Function to delete an attachment from the list\n\n\n  const handleDeleteAttachment = index => {\n    const updatedAttachments = [...attachments];\n    updatedAttachments.splice(index, 1);\n    setAttachments(updatedAttachments);\n  }; // Function to update attachments\n\n\n  const handleUpdateAttachments = async () => {\n    // Assuming you have an API endpoint to update attachments on the server\n    const apiUrl = `/api/contracts/${contratId}/attachments`;\n\n    try {\n      const response = await fetch(apiUrl, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          attachments: [...attachments, ...newAttachments]\n        })\n      });\n\n      if (response.ok) {\n        // Update the state with the new list of attachments\n        setAttachments([...attachments, ...newAttachments]);\n        setNewAttachments([]); // Clear the newAttachments after updating\n\n        console.log('Attachments updated successfully');\n      } else {\n        console.error('Failed to update attachments');\n      }\n    } catch (error) {\n      console.error('Error updating attachments:', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Attachments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: attachments.map((attachment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: attachment.url,\n          style: {\n            width: '200px',\n            height: '200px'\n          },\n          alt: `Attachment ${index + 1}`,\n          className: \"rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteAttachment(index),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => handleAddAttachments(Array.from(e.target.files)),\n      multiple: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdateAttachments,\n      children: \"Update Attachments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModifierAttachement, \"kGfGw8ekoBRJ2FnzAw6fYscZFFg=\", false, function () {\n  return [useParams];\n});\n\n_c = ModifierAttachement;\nexport default ModifierAttachement;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModifierAttachement\");","map":{"version":3,"names":["React","useState","useParams","ModifierAttachement","contratId","attachments","setAttachments","newAttachments","setNewAttachments","handleAddAttachments","files","handleDeleteAttachment","index","updatedAttachments","splice","handleUpdateAttachments","apiUrl","response","fetch","method","headers","body","JSON","stringify","ok","console","log","error","map","attachment","url","width","height","e","Array","from","target"],"sources":["C:/Users/donia/Documents/Tunisys/src/views/admin/ClientManagement/CONTRAT/ModifierAttachement.jsx"],"sourcesContent":["/*import React, { useState, } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst AttachmentsModal = ({\r\n  isOpen,\r\n  handleClose,\r\n  existingAttachments,\r\n  onDeleteAttachment,\r\n  onAddAttachments}) =>\r\n   {\r\n  const [newAttachments, setNewAttachments] = useState([]);\r\n\r\n  const handleDeleteNewAttachment = (index) => {\r\n    setNewAttachments((prevAttachments) => prevAttachments.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleDeleteExistingAttachment = (attachmentId) => {\r\n    onDeleteAttachment(attachmentId);\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    onAddAttachments(newAttachments);\r\n    setNewAttachments([]);\r\n  };\r\n  const { contratId } = useParams();\r\n\r\n  return (\r\n    <div className=\"fixed top-0 left-0 z-10 flex h-full w-full items-center justify-center\">\r\n      <div className=\"relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg rounded-md bg-white p-8 border-2 shadow-lg border-tunisys-100 dark:bg-gray-900\">\r\n        <div className={`modal ${isOpen ? 'open' : 'closed'}`}>\r\n          <div className=\"modal-content\">\r\n            <h2>Attachments</h2>\r\n\r\n            <div className=\"grid grid-cols-2 gap-4 mt-4\">\r\n              {existingAttachments.map((existingAttachment, index) => (\r\n                <div key={index} className=\"relative\">\r\n                  <button\r\n                    className=\"absolute top-2 right-2 text-red-600\"\r\n                    onClick={() => handleDeleteExistingAttachment(existingAttachment._id)}\r\n                  >\r\n                    X\r\n                  </button>\r\n                  <img\r\n                    src={existingAttachment.url}\r\n                    style={{ width: '200px', height: '200px' }}\r\n                    alt={`Existing Attachment ${index + 1}`}\r\n                    className='rounded'\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-2 gap-4 mt-4\">\r\n              {newAttachments.map((newAttachment, index) => (\r\n                <div key={index} className=\"relative\">\r\n                  <button\r\n                    className=\"absolute top-2 right-2 text-red-600\"\r\n                    onClick={() => handleDeleteNewAttachment(index)}\r\n                  >\r\n                    X\r\n                  </button>\r\n                  <img\r\n                    src={URL.createObjectURL(newAttachment)}\r\n                    style={{ width: '200px', height: '200px' }}\r\n                    alt={`New Attachment ${index + 1}`}\r\n                    className='rounded'\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <input\r\n              type=\"file\"\r\n              onChange={(e) => setNewAttachments(Array.from(e.target.files))}\r\n              multiple\r\n            />\r\n\r\n            <button\r\n              onClick={handleAdd}\r\n              className={`bg-green-500 rounded text-white p-2 ${newAttachments.length === 0 ? 'cursor-not-allowed opacity-50' : ''}`}\r\n              disabled={newAttachments.length === 0}\r\n            >\r\n              Add Attachments\r\n            </button>\r\n\r\n            <button onClick={handleClose} className='ml-6 bg-red-500 rounded text-white p-2'>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttachmentsModal;*/\r\nimport React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ModifierAttachement = () => {\r\n  const { contratId } = useParams();\r\n  const [attachments, setAttachments] = useState([]);\r\n  const [newAttachments, setNewAttachments] = useState([]);\r\n\r\n  // Function to add new attachments to the list\r\n  const handleAddAttachments = (files) => {\r\n    setNewAttachments(files);\r\n  };\r\n\r\n  // Function to delete an attachment from the list\r\n  const handleDeleteAttachment = (index) => {\r\n    const updatedAttachments = [...attachments];\r\n    updatedAttachments.splice(index, 1);\r\n    setAttachments(updatedAttachments);\r\n  };\r\n\r\n  // Function to update attachments\r\n  const handleUpdateAttachments = async () => {\r\n    // Assuming you have an API endpoint to update attachments on the server\r\n    const apiUrl = `/api/contracts/${contratId}/attachments`;\r\n\r\n    try {\r\n      const response = await fetch(apiUrl, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ attachments: [...attachments, ...newAttachments] }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Update the state with the new list of attachments\r\n        setAttachments([...attachments, ...newAttachments]);\r\n        setNewAttachments([]); // Clear the newAttachments after updating\r\n        console.log('Attachments updated successfully');\r\n      } else {\r\n        console.error('Failed to update attachments');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating attachments:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Attachments</h2>\r\n\r\n      {/* Display existing attachments */}\r\n      <div>\r\n        {attachments.map((attachment, index) => (\r\n          <div key={index}>\r\n            <img\r\n              src={attachment.url}\r\n              style={{ width: '200px', height: '200px' }}\r\n              alt={`Attachment ${index + 1}`}\r\n              className='rounded'\r\n            />\r\n            <button onClick={() => handleDeleteAttachment(index)}>\r\n              Delete\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* File input for adding new attachments */}\r\n      <input\r\n        type=\"file\"\r\n        onChange={(e) => handleAddAttachments(Array.from(e.target.files))}\r\n        multiple\r\n      />\r\n\r\n      {/* Button to update attachments */}\r\n      <button onClick={handleUpdateAttachments}>\r\n        Update Attachments\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModifierAttachement;\r\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;EAAA;;EAChC,MAAM;IAAEC;EAAF,IAAgBF,SAAS,EAA/B;EACA,MAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD,CAHgC,CAKhC;;EACA,MAAMQ,oBAAoB,GAAIC,KAAD,IAAW;IACtCF,iBAAiB,CAACE,KAAD,CAAjB;EACD,CAFD,CANgC,CAUhC;;;EACA,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;IACxC,MAAMC,kBAAkB,GAAG,CAAC,GAAGR,WAAJ,CAA3B;IACAQ,kBAAkB,CAACC,MAAnB,CAA0BF,KAA1B,EAAiC,CAAjC;IACAN,cAAc,CAACO,kBAAD,CAAd;EACD,CAJD,CAXgC,CAiBhC;;;EACA,MAAME,uBAAuB,GAAG,YAAY;IAC1C;IACA,MAAMC,MAAM,GAAI,kBAAiBZ,SAAU,cAA3C;;IAEA,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAACF,MAAD,EAAS;QACnCG,MAAM,EAAE,KAD2B;QAEnCC,OAAO,EAAE;UACP,gBAAgB;QADT,CAF0B;QAKnCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UAAElB,WAAW,EAAE,CAAC,GAAGA,WAAJ,EAAiB,GAAGE,cAApB;QAAf,CAAf;MAL6B,CAAT,CAA5B;;MAQA,IAAIU,QAAQ,CAACO,EAAb,EAAiB;QACf;QACAlB,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiB,GAAGE,cAApB,CAAD,CAAd;QACAC,iBAAiB,CAAC,EAAD,CAAjB,CAHe,CAGQ;;QACvBiB,OAAO,CAACC,GAAR,CAAY,kCAAZ;MACD,CALD,MAKO;QACLD,OAAO,CAACE,KAAR,CAAc,8BAAd;MACD;IACF,CAjBD,CAiBE,OAAOA,KAAP,EAAc;MACdF,OAAO,CAACE,KAAR,CAAc,6BAAd,EAA6CA,KAA7C;IACD;EACF,CAxBD;;EA0BA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAA,UACGtB,WAAW,CAACuB,GAAZ,CAAgB,CAACC,UAAD,EAAajB,KAAb,kBACf;QAAA,wBACE;UACE,GAAG,EAAEiB,UAAU,CAACC,GADlB;UAEE,KAAK,EAAE;YAAEC,KAAK,EAAE,OAAT;YAAkBC,MAAM,EAAE;UAA1B,CAFT;UAGE,GAAG,EAAG,cAAapB,KAAK,GAAG,CAAE,EAH/B;UAIE,SAAS,EAAC;QAJZ;UAAA;UAAA;UAAA;QAAA,QADF,eAOE;UAAQ,OAAO,EAAE,MAAMD,sBAAsB,CAACC,KAAD,CAA7C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAPF;MAAA,GAAUA,KAAV;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAJF,eAqBE;MACE,IAAI,EAAC,MADP;MAEE,QAAQ,EAAGqB,CAAD,IAAOxB,oBAAoB,CAACyB,KAAK,CAACC,IAAN,CAAWF,CAAC,CAACG,MAAF,CAAS1B,KAApB,CAAD,CAFvC;MAGE,QAAQ;IAHV;MAAA;MAAA;MAAA;IAAA,QArBF,eA4BE;MAAQ,OAAO,EAAEK,uBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA5BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkCD,CA9ED;;GAAMZ,mB;UACkBD,S;;;KADlBC,mB;AAgFN,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}