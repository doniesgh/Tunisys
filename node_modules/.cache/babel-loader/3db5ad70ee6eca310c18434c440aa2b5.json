{"ast":null,"code":"/*import { useState,useEffect } from \"react\";\nimport { toast, ToastContainer } from 'react-toastify';\nconst AddEquipement = () => {\n    const [equipement_sn, setequipement_sn] = useState(\"\");\n    const [equipement_type, setequipement_type] = useState(\"\");\n    const [terminal_no, setterminal_no] = useState(\"\");\n    const [modele, setModele] = useState(\"\");\n    const[status,setStatus] = useState(\"\");\n    const[modele_pc,setModelePc] = useState(\"\") \n    const [modele_ecran, setModele_ecran] = useState(\"\");\n    const [os, setOs] = useState(\"\");\n    const[parametre_reseau,setParametreReseau]= useState(\"\")\n    const [nb_camera, setNbCamera  ] = useState(\"\");\n    const [nb_casette, setNbCasette] = useState(\"\");\n    const [version_application, setVersion_application] = useState(\"\");\n    const [error, setError] = useState('');\n    const [successMessage, setSuccessMessage] = useState(\"\");\n    const [emptyFields, setEmptyFields] = useState([]);\n    \n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const equipementData = {\n            parametre_reseau,\n            equipement_sn,\n            equipement_type,\n            terminal_no,\n            modele,\n            status,\n            modele_pc,\n            modele_ecran,\n            os,\n            nb_casette,\n            version_application,\n            nb_camera,\n        };\n        const response = await fetch('/api/equi/', {\n            method: 'POST',\n            body: JSON.stringify(equipementData),\n            headers: {\n                'Content-type': 'application/json'\n            }\n        });\n        const json = await response.json();\n        if (!response.ok) {\n            console.log(json); // Log the server response\n            setError(json.error);\n            setEmptyFields(json.emptyFields);\n        } else {\n            setEmptyFields([]);\n            setequipement_sn('');\n            setequipement_type('');\n            setterminal_no('');\n            setModele('')\n            setStatus('')\n            setModelePc('');\n            setModele_ecran('');\n            setOs('');\n            setParametreReseau('');\n            setNbCamera('');\n            setNbCasette('');\n            setVersion_application('');\n            setError(null);\n            setSuccessMessage(\"Équipement ajouté avec succès\");\n        }\n    }\n    return (\n        <div className=\"overflow-x-auto\">\n        <ToastContainer />\n\n        <h1 className=\"text-[1.7em]  mb-2.5 mx-0 text-center font-semibold dark:text-white\">Ajouter equipement:</h1>\n        <div className=\"space-y-1\">\n            <div className=\"border-b border-gray-900/10 pb-12\">\n                <div className=\"mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6\">\n                    <div className=\"sm:col-span-3 relative\">\n                    <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">equipement_sn</label>\n                        <div >\n                            <input type=\"text\"\n                                value={equipement_sn}\n                                onChange={(e) => setequipement_sn(e.target.value)}\n                                className=\"block w-full dark:bg-navy-900 border-red-700 rounded-md border-2 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                    <div className=\"sm:col-span-3\">\n                        <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">equipement_type</label>\n                        <div >\n                            <input type=\"text\"\n                                value={equipement_type}\n                                onChange={(e) => setequipement_type(e.target.value)}\n                                className=\"block w-full border-red-700 dark:bg-navy-900 rounded-md border-2 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                    <div className=\"sm:col-span-3\">\n                        <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">terminal_no</label>\n                        <div >\n                            <input type=\"text\"\n                                value={terminal_no}\n                                onChange={(e) => setterminal_no(e.target.value)}\n                                className=\"block w-full border-red-700 dark:bg-navy-900 rounded-md border-2 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                    <div className=\"sm:col-span-3\">\n                        <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">modele</label>\n                        <div >\n                            <input type=\"text\"\n                                value={modele}\n                                onChange={(e) => setModele(e.target.value)}\n                                className=\"block w-full  rounded-md border-2 py-1.5 dark:bg-navy-900 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                    <div className=\"sm:col-span-3\">\n                        <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">status</label>\n                        <div >\n                            <input type=\"text\"\n                                value={status}\n                                onChange={(e) => setStatus(e.target.value)}\n                                className=\"block w-full  rounded-md border-2 dark:bg-navy-900 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                    <div className=\"sm:col-span-3\">\n                        <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">modele_pc</label>\n                        <div >\n                            <input type=\"text\"\n                                value={modele_pc}\n                                onChange={(e) => setModelePc(e.target.value)}\n                                className=\"block w-full  rounded-md border-2 py-1.5 dark:bg-navy-900 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                    <div className=\"sm:col-span-3\">\n                        <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">version_application</label>\n                        <div >\n                            <input type=\"text\"\n                                value={version_application}\n                                onChange={(e) => setVersion_application(e.target.value)}\n                                className=\"block w-full  rounded-md border-2 py-1.5 text-gray-900 dark:bg-navy-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                    <div className=\"sm:col-span-3\">\n                        <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">Systéme d'exploitation</label>\n                        <div >\n                            <input type=\"text\"\n                                value={os}\n                                onChange={(e) => setOs(e.target.value)}\n                                className=\"block w-full rounded-md border-2 py-1.5 text-gray-900 dark:bg-navy-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                    <div className=\"sm:col-span-3\">\n                        <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">parametre_reseau</label>\n                        <div >\n                            <input type=\"text\"\n                                value={parametre_reseau}\n                                onChange={(e) => setParametreReseau(e.target.value)}\n                                className=\"block w-full  rounded-md border-2 py-1.5 text-gray-900 dark:bg-navy-900  shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                    <div className=\"sm:col-span-3\">\n                        <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">modele_ecran</label>\n                        <div >\n                            <input type=\"text\"\n                                value={modele_ecran}\n                                onChange={(e) => setModele_ecran(e.target.value)}\n                                className=\"block w-full  rounded-md border-2 py-1.5 text-gray-900 dark:bg-navy-900  shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                    <div className=\"sm:col-span-3\">\n                        <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">nb_casette</label>\n                        <div >\n                            <input type=\"number\"\n                                value={nb_casette}\n                                onChange={(e) => setNbCasette(e.target.value)}\n                                className=\"block w-full rounded-md border-2 py-1.5 text-gray-900 dark:bg-navy-900  shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                    <div className=\"sm:col-span-3\">\n                        <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">nb_camera</label>\n                        <div >\n                            <input type=\"number\"\n                                value={nb_camera}\n                                onChange={(e) => setNbCamera(e.target.value)}\n                                className=\"block w-full  rounded-md border-2 py-1.5 dark:bg-navy-900  text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div className=\"mt-4 flex items-center justify-end gap-x-6\">\n            <button type=\"button\" className=\"rounded-md bg-red-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-300 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\" onClick={handleSubmit}>Valider</button>\n            <button type=\"button\" className=\"rounded-md bg-indigo-900 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\">Annuler</button>\n        </div>\n        {error && <div className=\"error border rounded mx-0 my-5 p-2.5 border-solid bg-red-300\">{error}</div>}\n        {successMessage && <div className=\"success border rounded mx-0 my-5 p-2.5 border-solid bg-green-300\">{successMessage}</div>}\n       \n    </div>\n        )\n}\n\nexport default AddEquipement*/","map":{"version":3,"names":[],"sources":["C:/Users/donia/Documents/Tunisys/src/views/admin/EquipementManagement/AddEquipement.jsx"],"sourcesContent":["/*import { useState,useEffect } from \"react\";\nimport { toast, ToastContainer } from 'react-toastify';\nconst AddEquipement = () => {\n    const [equipement_sn, setequipement_sn] = useState(\"\");\n    const [equipement_type, setequipement_type] = useState(\"\");\n    const [terminal_no, setterminal_no] = useState(\"\");\n    const [modele, setModele] = useState(\"\");\n    const[status,setStatus] = useState(\"\");\n    const[modele_pc,setModelePc] = useState(\"\") \n    const [modele_ecran, setModele_ecran] = useState(\"\");\n    const [os, setOs] = useState(\"\");\n    const[parametre_reseau,setParametreReseau]= useState(\"\")\n    const [nb_camera, setNbCamera  ] = useState(\"\");\n    const [nb_casette, setNbCasette] = useState(\"\");\n    const [version_application, setVersion_application] = useState(\"\");\n    const [error, setError] = useState('');\n    const [successMessage, setSuccessMessage] = useState(\"\");\n    const [emptyFields, setEmptyFields] = useState([]);\n    \n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const equipementData = {\n            parametre_reseau,\n            equipement_sn,\n            equipement_type,\n            terminal_no,\n            modele,\n            status,\n            modele_pc,\n            modele_ecran,\n            os,\n            nb_casette,\n            version_application,\n            nb_camera,\n        };\n        const response = await fetch('/api/equi/', {\n            method: 'POST',\n            body: JSON.stringify(equipementData),\n            headers: {\n                'Content-type': 'application/json'\n            }\n        });\n        const json = await response.json();\n        if (!response.ok) {\n            console.log(json); // Log the server response\n            setError(json.error);\n            setEmptyFields(json.emptyFields);\n        } else {\n            setEmptyFields([]);\n            setequipement_sn('');\n            setequipement_type('');\n            setterminal_no('');\n            setModele('')\n            setStatus('')\n            setModelePc('');\n            setModele_ecran('');\n            setOs('');\n            setParametreReseau('');\n            setNbCamera('');\n            setNbCasette('');\n            setVersion_application('');\n            setError(null);\n            setSuccessMessage(\"Équipement ajouté avec succès\");\n        }\n    }\n    return (\n        <div className=\"overflow-x-auto\">\n        <ToastContainer />\n\n        <h1 className=\"text-[1.7em]  mb-2.5 mx-0 text-center font-semibold dark:text-white\">Ajouter equipement:</h1>\n        <div className=\"space-y-1\">\n            <div className=\"border-b border-gray-900/10 pb-12\">\n                <div className=\"mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6\">\n                    <div className=\"sm:col-span-3 relative\">\n                    <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">equipement_sn</label>\n                        <div >\n                            <input type=\"text\"\n                                value={equipement_sn}\n                                onChange={(e) => setequipement_sn(e.target.value)}\n                                className=\"block w-full dark:bg-navy-900 border-red-700 rounded-md border-2 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                    <div className=\"sm:col-span-3\">\n                        <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">equipement_type</label>\n                        <div >\n                            <input type=\"text\"\n                                value={equipement_type}\n                                onChange={(e) => setequipement_type(e.target.value)}\n                                className=\"block w-full border-red-700 dark:bg-navy-900 rounded-md border-2 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                    <div className=\"sm:col-span-3\">\n                        <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">terminal_no</label>\n                        <div >\n                            <input type=\"text\"\n                                value={terminal_no}\n                                onChange={(e) => setterminal_no(e.target.value)}\n                                className=\"block w-full border-red-700 dark:bg-navy-900 rounded-md border-2 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                    <div className=\"sm:col-span-3\">\n                        <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">modele</label>\n                        <div >\n                            <input type=\"text\"\n                                value={modele}\n                                onChange={(e) => setModele(e.target.value)}\n                                className=\"block w-full  rounded-md border-2 py-1.5 dark:bg-navy-900 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                    <div className=\"sm:col-span-3\">\n                        <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">status</label>\n                        <div >\n                            <input type=\"text\"\n                                value={status}\n                                onChange={(e) => setStatus(e.target.value)}\n                                className=\"block w-full  rounded-md border-2 dark:bg-navy-900 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                    <div className=\"sm:col-span-3\">\n                        <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">modele_pc</label>\n                        <div >\n                            <input type=\"text\"\n                                value={modele_pc}\n                                onChange={(e) => setModelePc(e.target.value)}\n                                className=\"block w-full  rounded-md border-2 py-1.5 dark:bg-navy-900 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                    <div className=\"sm:col-span-3\">\n                        <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">version_application</label>\n                        <div >\n                            <input type=\"text\"\n                                value={version_application}\n                                onChange={(e) => setVersion_application(e.target.value)}\n                                className=\"block w-full  rounded-md border-2 py-1.5 text-gray-900 dark:bg-navy-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                    <div className=\"sm:col-span-3\">\n                        <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">Systéme d'exploitation</label>\n                        <div >\n                            <input type=\"text\"\n                                value={os}\n                                onChange={(e) => setOs(e.target.value)}\n                                className=\"block w-full rounded-md border-2 py-1.5 text-gray-900 dark:bg-navy-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                    <div className=\"sm:col-span-3\">\n                        <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">parametre_reseau</label>\n                        <div >\n                            <input type=\"text\"\n                                value={parametre_reseau}\n                                onChange={(e) => setParametreReseau(e.target.value)}\n                                className=\"block w-full  rounded-md border-2 py-1.5 text-gray-900 dark:bg-navy-900  shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                    <div className=\"sm:col-span-3\">\n                        <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">modele_ecran</label>\n                        <div >\n                            <input type=\"text\"\n                                value={modele_ecran}\n                                onChange={(e) => setModele_ecran(e.target.value)}\n                                className=\"block w-full  rounded-md border-2 py-1.5 text-gray-900 dark:bg-navy-900  shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                    <div className=\"sm:col-span-3\">\n                        <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">nb_casette</label>\n                        <div >\n                            <input type=\"number\"\n                                value={nb_casette}\n                                onChange={(e) => setNbCasette(e.target.value)}\n                                className=\"block w-full rounded-md border-2 py-1.5 text-gray-900 dark:bg-navy-900  shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                    <div className=\"sm:col-span-3\">\n                        <label htmlFor=\"model\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-gray-600\">nb_camera</label>\n                        <div >\n                            <input type=\"number\"\n                                value={nb_camera}\n                                onChange={(e) => setNbCamera(e.target.value)}\n                                className=\"block w-full  rounded-md border-2 py-1.5 dark:bg-navy-900  text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div className=\"mt-4 flex items-center justify-end gap-x-6\">\n            <button type=\"button\" className=\"rounded-md bg-red-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-300 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\" onClick={handleSubmit}>Valider</button>\n            <button type=\"button\" className=\"rounded-md bg-indigo-900 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\">Annuler</button>\n        </div>\n        {error && <div className=\"error border rounded mx-0 my-5 p-2.5 border-solid bg-red-300\">{error}</div>}\n        {successMessage && <div className=\"success border rounded mx-0 my-5 p-2.5 border-solid bg-green-300\">{successMessage}</div>}\n       \n    </div>\n        )\n}\n\nexport default AddEquipement*/"],"mappings},"metadata":{},"sourceType":"module"}