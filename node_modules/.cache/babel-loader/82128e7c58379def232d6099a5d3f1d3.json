{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\donia\\\\Documents\\\\Tunisys\\\\src\\\\views\\\\admin\\\\calandar\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { useReclamationsContext } from 'Hooks/useRecsContext';\nimport { useAuthContext } from 'views/auth/hooks/useAuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CalendarComponent = () => {\n  _s();\n\n  const reclamationtStyleGetter = (reclamation, createdAt) => {\n    let style = {\n      backgroundColor: reclamation.color,\n      borderRadius: '10px',\n      opacity: 0.8,\n      border: 'none',\n      display: 'block',\n      height: '50px',\n      fontSize: '22px'\n    };\n    return {\n      style: style\n    };\n  };\n\n  const {\n    reclamations,\n    dispatch\n  } = useReclamationsContext();\n  const localizer = momentLocalizer(moment);\n  const {\n    user\n  } = useAuthContext();\n  const events = reclamations ? reclamations.map(reclamation => ({\n    title: reclamation.type,\n    start: new Date(reclamation.createdAt),\n    end: new Date(reclamation.createdAt)\n  })) : [];\n  useEffect(() => {\n    let isMounted = true;\n\n    const fetchRecalamations = async () => {\n      const response = await fetch('/api/rec/', {\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      const json = await response.json();\n\n      if (response.ok && isMounted) {\n        dispatch({\n          type: 'SET_REC',\n          payload: json.map(reclamation => ({ ...reclamation,\n            type: reclamation.type,\n            Date: new Date(reclamation.createdAt)\n          }))\n        });\n      }\n    };\n\n    fetchRecalamations();\n    return () => {\n      isMounted = false;\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-6\",\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events //eventPropGetter={reclamationStyleGetter}\n      ,\n      style: {\n        height: 700\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CalendarComponent, \"XeObMUYgYfZaSlX0ox+gsgwgCy8=\", false, function () {\n  return [useReclamationsContext, useAuthContext];\n});\n\n_c = CalendarComponent;\nexport default CalendarComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarComponent\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","momentLocalizer","moment","useReclamationsContext","useAuthContext","CalendarComponent","reclamationtStyleGetter","reclamation","createdAt","style","backgroundColor","color","borderRadius","opacity","border","display","height","fontSize","reclamations","dispatch","localizer","user","events","map","title","type","start","Date","end","isMounted","fetchRecalamations","response","fetch","headers","Authorization","token","json","ok","payload"],"sources":["C:/Users/donia/Documents/Tunisys/src/views/admin/calandar/index.jsx"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport { useReclamationsContext } from 'Hooks/useRecsContext';\nimport { useAuthContext } from 'views/auth/hooks/useAuthContext';\n\nconst CalendarComponent = () => {\n  const reclamationtStyleGetter = (reclamation, createdAt) => {\n    let style = {\n      backgroundColor: reclamation.color,\n      borderRadius: '10px',\n      opacity: 0.8,\n      border: 'none',\n      display: 'block',\n      height:'50px',\n      fontSize:'22px',\n    };\n    return {\n      style: style\n    };\n  };\n  const { reclamations, dispatch } = useReclamationsContext()\n  const localizer = momentLocalizer(moment)\n  const { user } = useAuthContext()\n  const events = reclamations\n  ? reclamations.map((reclamation) => ({\n      title: reclamation.type,\n      start: new Date(reclamation.createdAt),\n      end: new Date(reclamation.createdAt),\n    }))\n  : [];\n\n\n  useEffect(() => {\n    let isMounted = true\n\n    const fetchRecalamations = async () => {\n      const response = await fetch('/api/rec/',{\n        headers : {\n          'Content-type': 'application/json', \n          Authorization: `Bearer ${user.token}`\n\n                }\n      })\n      const json = await response.json()\n\n      if (response.ok && isMounted) {\n        dispatch({ type: 'SET_REC', payload: json.map(reclamation => ({...reclamation, type: reclamation.type, Date: new Date(reclamation.createdAt)})) })\n      }\n    }\n    fetchRecalamations()\n    return () => {\n      isMounted = false\n    }\n  }, [dispatch])\n\n  return (\n    <div className='mt-6'>\n      <Calendar\n          localizer={localizer}\n          events={events}\n          //eventPropGetter={reclamationStyleGetter}\n          style={{\n            height: 700,\n          }}\n        />\n      {/*reclamations ? (\n        \n      ) : (\n        <p>Loading reclamations...</p>\n      )*/}\n    </div>\n  );\n  \n}\n\nexport default CalendarComponent\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,mDAAP;AACA,SAASC,sBAAT,QAAuC,sBAAvC;AACA,SAASC,cAAT,QAA+B,iCAA/B;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;EAAA;;EAC9B,MAAMC,uBAAuB,GAAG,CAACC,WAAD,EAAcC,SAAd,KAA4B;IAC1D,IAAIC,KAAK,GAAG;MACVC,eAAe,EAAEH,WAAW,CAACI,KADnB;MAEVC,YAAY,EAAE,MAFJ;MAGVC,OAAO,EAAE,GAHC;MAIVC,MAAM,EAAE,MAJE;MAKVC,OAAO,EAAE,OALC;MAMVC,MAAM,EAAC,MANG;MAOVC,QAAQ,EAAC;IAPC,CAAZ;IASA,OAAO;MACLR,KAAK,EAAEA;IADF,CAAP;EAGD,CAbD;;EAcA,MAAM;IAAES,YAAF;IAAgBC;EAAhB,IAA6BhB,sBAAsB,EAAzD;EACA,MAAMiB,SAAS,GAAGnB,eAAe,CAACC,MAAD,CAAjC;EACA,MAAM;IAAEmB;EAAF,IAAWjB,cAAc,EAA/B;EACA,MAAMkB,MAAM,GAAGJ,YAAY,GACzBA,YAAY,CAACK,GAAb,CAAkBhB,WAAD,KAAkB;IACjCiB,KAAK,EAAEjB,WAAW,CAACkB,IADc;IAEjCC,KAAK,EAAE,IAAIC,IAAJ,CAASpB,WAAW,CAACC,SAArB,CAF0B;IAGjCoB,GAAG,EAAE,IAAID,IAAJ,CAASpB,WAAW,CAACC,SAArB;EAH4B,CAAlB,CAAjB,CADyB,GAMzB,EANF;EASAT,SAAS,CAAC,MAAM;IACd,IAAI8B,SAAS,GAAG,IAAhB;;IAEA,MAAMC,kBAAkB,GAAG,YAAY;MACrC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAD,EAAa;QACvCC,OAAO,EAAG;UACR,gBAAgB,kBADR;UAERC,aAAa,EAAG,UAASb,IAAI,CAACc,KAAM;QAF5B;MAD6B,CAAb,CAA5B;MAOA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAT,EAAnB;;MAEA,IAAIL,QAAQ,CAACM,EAAT,IAAeR,SAAnB,EAA8B;QAC5BV,QAAQ,CAAC;UAAEM,IAAI,EAAE,SAAR;UAAmBa,OAAO,EAAEF,IAAI,CAACb,GAAL,CAAShB,WAAW,KAAK,EAAC,GAAGA,WAAJ;YAAiBkB,IAAI,EAAElB,WAAW,CAACkB,IAAnC;YAAyCE,IAAI,EAAE,IAAIA,IAAJ,CAASpB,WAAW,CAACC,SAArB;UAA/C,CAAL,CAApB;QAA5B,CAAD,CAAR;MACD;IACF,CAbD;;IAcAsB,kBAAkB;IAClB,OAAO,MAAM;MACXD,SAAS,GAAG,KAAZ;IACD,CAFD;EAGD,CArBQ,EAqBN,CAACV,QAAD,CArBM,CAAT;EAuBA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,uBACE,QAAC,QAAD;MACI,SAAS,EAAEC,SADf;MAEI,MAAM,EAAEE,MAFZ,CAGI;MAHJ;MAII,KAAK,EAAE;QACLN,MAAM,EAAE;MADH;IAJX;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CApED;;GAAMX,iB;UAe+BF,sB,EAElBC,c;;;KAjBbC,iB;AAsEN,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}